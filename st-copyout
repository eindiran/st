#!/usr/bin/env bash
# Using external pipe with st, give a dmenu prompt of recent commands,
# allowing the user to copy the output of one.
# xclip required for this script.
# By Jaywalker and Luke
TMPFILE=$(mktemp /tmp/st-cmd-output.XXXXXX)

exit_on_signal() {
    # Run this function when the shell traps a signal indicating
    # everything is over:
    rm -f "$TMPFILE"
}
# Trap SUCCESS, SIGHUP, and SIGTERM:
trap 'exit_on_signal' 0 1 15

sed -n "w $TMPFILE"
sed -i 's/\x0//g' "$TMPFILE"
PS1="$(grep "\S" "$TMPFILE" | tail -n 1 | sed 's/^\s*//' | cut -d' ' -f1)"
CHOSEN_COMMAND="$(grep -F "$PS1" "$TMPFILE" | sed '$ d' | tac | dmenu -p "Copy which command's output?" -i -l 10 | sed 's/[^^]/[&]/g; s/\^/\\^/g')"
EPS1="$(echo "$PS1" | sed 's/[^^]/[&]/g; s/\^/\\^/g')"
# Copy into the `clipboard` buffer:
awk "/^$CHOSEN_COMMAND$/{p=1;print;next} p&&/$EPS1/{p=0};p" "$TMPFILE" | xclip -selection clipboard
# # Copy into the `primary` buffer:
# awk "/^$CHOSEN_COMMAND$/{p=1;print;next} p&&/$EPS1/{p=0};p" "$TMPFILE" | xclip -selection primary
# # Copy into the `primary` buffer:
# awk "/^$CHOSEN_COMMAND$/{p=1;print;next} p&&/$EPS1/{p=0};p" "$TMPFILE" | xclip -selection secondary
